//******************************************************************************
// required event
//******************************************************************************
OnFirstBoot          { '\1\s[10]\0\s[0]よろしく。\e' }
OnShellChanged       { '\1\s[10]\0\s[0]待たせたな。\e' }
OnWindowStateRestore { '\1\s[10]\0\s[0]\e' }
OnGhostChanged       { OnBoot() }
OnBoot
{
	'\1\s[10]\0\s[0]呼んだか？'
	'\1\s[10]\0\s[5]退屈していたところだ。'
	'\1\s[10]\0\s[5]また負けに来たのか。'
	'\1\s[10]\0\s[8]懲りない奴だな。'
	--
	'\e'
}
OnClose
{
	'\1\s[10]\0\s[0]またな。'
	'\1\s[10]\0\s[6]もっと腕を磨いてこい。'
	'\1\s[10]\0\s[6]退屈しのぎにもならんな。'
	'\1\s[10]\0\s[5]今日はこれで勘弁してやろう。'
	--
	'\_w[500]\-\e'
}

//******************************************************************************
// update event
//******************************************************************************
OnUpdateBegin        { '\0\s[0]\_qUpdate Begin.\_q\e' }
OnUpdateComplete     { '\0\s[0]\_q' + reference[0] + '.\_q\e' }
OnUpdateFailure      { '\0\s[0]\_q' + reference[0] + '.\_q\e' }
OnUpdateReady
{
	_n = 0
	if sender == 'embryo' {
		_n = reference[0] + 1
	} else {
		_n = reference[0]
	}
	if _n > 1 {
		'\0\s[0]\_q' + _n + ' files exist.\_q\e'
	} elseif _n == 1 {
		'\0\s[0]\_q' + _n + ' file exists.\_q\e'
	}
}

//******************************************************************************
// mouse event
//******************************************************************************
OnMouseMove
{
	AYATEMPLATE.MouseMoveWheelFunc(0, 50, 'MouseMove')
}

OnMouseDoubleClick
{
	AYATEMPLATE.MouseEventExec('MouseDoubleClick');
}

MouseDoubleClick0Head : nonoverlap
{
	'\0\s[3]何をする。\e'
	'\0\s[4]壊れるから止めろ。\e'
}
MouseDoubleClick0Face : nonoverlap
{
	'\0\s[3]何だ？\e'
	'\0\s[6]触るな。\_w[500]ツキが逃げる。\e'
}
MouseDoubleClick0Bust : nonoverlap
{
	'\0\s[2]っ！\_w[500]\s[1]よ、よせ…。\e'
	'\0\s[1]もっと丁重に扱え。\e'
}
MouseDoubleClick0 : nonoverlap
{
	'\0\s[0]何か用か？\e'
	'\0\s[3]4翻30符がどうして満貫なのだ…？\e'
	'\0\s[6]お前の大切なものを賭けて闘え。\e'
	'\0\s[5]お前なら何を切る？\e'
}
MouseMove0Head : nonoverlap
{
	'\0\s[1]こ、子供扱いするな。\e'
	'\0\s[5]…？\e'
}
MouseMove0Face : nonoverlap
{
	'\0\s[0]…？\e'
	'\0\s[6]邪魔するな。\e'
}
MouseMove0Bust : nonoverlap
{
	'\0\s[7]そこは１筒じゃない！\e'
	'\0\s[1]盲牌の練習でもしてろ。\e'
}

//******************************************************************************
// key event
//******************************************************************************
OnKeyPress
{
	if ISFUNC('sys.key.' + reference[0]) {
		EVAL('sys.key.' + reference[0])
	}
}
sys.key.r
{
	'\![reload,shiori]\0\s[0]\_qReloaded.\_q\e'
}
//******************************************************************************
// other
//******************************************************************************
OnSurfaceRestore
{
	'\1\s[10]\0\s[0]\e'
}
//******************************************************************************
// tama
//******************************************************************************
On_tamaOpen
{
	SETTAMAHWND(reference[0])
	SHIORI3FW.Push_X_SSTP_PassThru('Title', 'tama test: ' + SHIORI3FW.GhostName)
	SHIORI3FW.Push_X_SSTP_PassThru('Icon', 'icon.ico')
	SHIORI3FW.Push_X_SSTP_PassThru('border.color', '294729')
	SHIORI3FW.Push_X_SSTP_PassThru('background.color', '4b694b')
	SHIORI3FW.Push_X_SSTP_PassThru('default.color', 'ffffff')
	SHIORI3FW.Push_X_SSTP_PassThru('face', 'Nishiki-teki')
}
On_tamaExit
{
    SETTAMAHWND(0)
}
