OnNostr
{
	_protocol_version = reference[0]
	_kind = reference[1]
	if _protocol_version != 'Nostr/0.4' || _kind != 42
		'\e'
	_content = reference[2]
	if RE_SEARCH(_content, 'sutehai\?\ssutehai\s([1-9][mpsz])') {
		_pai = RE_GETSTR()[1]
		_url = Nostr.GetPaiUrl(_pai)
		"\0\_q\_b[%(_url),centerx,centery,--option=opaque,--option=use_self_alpha,--option=background]\e"
	}
	elseif RE_SEARCH(_content, 'naku\?\s(ron|kan|pon|chi)(\s[1-9][mpsz]\s[1-9][mpsz])?') {
		_word = RE_GETSTR()[1]
		_say = ''
		_aqtk = ''
		case _word {
		when 'chi' {
			_say = '\s[6]チー'
			_aqtk = "ち'ー"
		}
		when 'pon' {
			_say = '\s[6]ポン'
			_aqtk = "ぽ'ん"
		}
		when 'kan' {
			_say = '\s[6]カン'
			_aqtk = "か'ん"
		}
		when 'ron' {
			_say = '\s[8]ロン'
			_aqtk = "ろ'ん"
		}
		}
		"\0\_q%(_say)\e"
		if _aqtk != ''
			AQ.ExecAqtk(_aqtk)
	}
	elseif RE_SEARCH(_content, 'sutehai\?\s(ankan|kakan|richi|tsumo)(\s[1-9][mpsz])?') {
		_word = RE_GETSTR()[1]
		_say = ''
		_aqtk = ''
		case _word {
		when 'tsumo' {
			_say = '\s[5]ツモ'
			_aqtk = "つ'も"
		}
		when 'richi' {
			_say = '\s[5]リーチ'
			_aqtk = "り'ーち"
			MJ.Save.Richi = 1
		}
		when 'ankan', 'kakan' {
			_say = '\s[6]カン'
			_aqtk = "か'ん"
		}
		}
		"\0\_q%(_say)\e"
		AQ.ExecAqtk(_aqtk)
	}
	else {
		'\e'
	}
}

Nostr.GetPaiUrl
{
	_pai = SUBSTR(_argv[0], 1, 1) + SUBSTR(_argv[0], 0, 1)
	_name = ''
	case _pai {
	when 'z1' {
		_name = 'east'
	}
	when 'z2' {
		_name = 'south'
	}
	when 'z3' {
		_name = 'west'
	}
	when 'z4' {
		_name = 'north'
	}
	when 'z5' {
		_name = 'white'
	}
	when 'z6' {
		_name = 'green'
	}
	when 'z7' {
		_name = 'red'
	}
	others {
		_name = _pai
	}
	}
	"https://awayuki.github.io/emoji/mahjong-%(_name).png"
}
